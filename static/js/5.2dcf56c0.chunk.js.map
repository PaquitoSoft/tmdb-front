{"version":3,"sources":["components/home/tvshow-card/tvshow-card.js","components/home/home-view.js","components/shared/use-query-string/use-query-string.js"],"names":["TvShowCard","tvShow","id","name","backdropImagePath","votesAverage","isFavorite","firstAirDate","className","to","path","type","sizes","alt","ratingValue","size","RatingIcon","BIG","Date","toDateString","isActive","FILTER_CODE_POPULAR","FilterLink","filterCode","selectedFilter","filterName","isSelected","VIEW_DATA_QUERY","HomeView","URLSearchParams","useLocation","search","get","useDataFetching","query","params","isFetching","data","tvShows","getByType","map","key"],"mappings":"oPASe,SAASA,EAAT,GAAsC,IAAD,IAAfC,cAAe,MAAN,GAAM,EAElDC,EAMGD,EANHC,GACAC,EAKGF,EALHE,KACAC,EAIGH,EAJHG,kBACAC,EAGGJ,EAHHI,aACAC,EAEGL,EAFHK,WACAC,EACGN,EADHM,aAGD,OACC,kBAAC,IAAD,CAAMC,UAAU,cAAcC,GAAE,kBAAaP,IAC5C,yBAAKM,UAAU,uBACd,kBAAC,IAAD,CACCA,UAAU,4BACVE,KAAMN,EACNO,KAAK,WACLC,MAAM,OACNC,IAAKV,KAGP,yBAAKK,UAAU,uBACd,kBAAC,IAAD,CACCA,UAAU,sBACVM,YAAaT,EACbU,KAAMC,IAAWJ,MAAMK,MAExB,yBAAKT,UAAU,qBACd,0BAAMA,UAAU,sBAAsBL,GACtC,0BAAMK,UAAU,qBAAsB,IAAIU,KAAKX,GAAcY,iBAE9D,kBAAC,IAAD,CAAcX,UAAU,6BAA6BY,SAAUd,M,MCxCnE,wCAWA,IAAMe,EAAsB,UAE5B,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAC3BC,EAAcF,IAAeF,EAAuB,UAAY,YAChEK,EAAcH,IAAeC,EACnC,OACC,kBAAC,IAAD,CACChB,UAAS,mCAA8BkB,EAAa,qCAAuC,IAC3FjB,GAAE,mBAAcc,IACfE,GAIJ,IAAME,EAAe,mNAcN,SAASC,IACvB,IACMJ,ECrCC,IAAIK,gBAAgBC,cAAcC,QDqCfC,IAAI,WAAaX,EAFT,EAO9BY,YAAgB,CACnBC,MAAOP,EACPQ,OAAQ,CACPxB,KAAMa,KALPY,EALiC,EAKjCA,WACAC,EANiC,EAMjCA,KAQD,GAAID,EAAY,OAAO,kBAAC,IAAD,MACvB,IAAKC,EAAM,OAAO,KAElB,IAAMC,EAAUD,EAAKE,UACrB,OACC,6BAAS/B,UAAU,aAClB,yBAAKA,UAAU,4BACd,kBAACc,EAAD,CAAYC,WAAW,UAAUC,eAAgBA,IACjD,kBAACF,EAAD,CAAYC,WAAW,YAAYC,eAAgBA,KAEpD,yBAAKhB,UAAU,mBACb8B,EAAQE,KAAI,SAAAvC,GAAM,OAAI,kBAACD,EAAD,CAAYyC,IAAKxC,EAAOC,GAAID,OAAQA","file":"static/js/5.2dcf56c0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MediaImage from '../../shared/media-image/media-image';\nimport RatingIcon from '../../shared/rating-icon/rating-icon';\nimport FavoriteIcon from '../../shared/favorite-icon/favorite-icon';\n\nimport './tvshow-card.css';\n\nexport default function TvShowCard({ tvShow = {} }) {\n\tconst {\n\t\tid,\n\t\tname,\n\t\tbackdropImagePath,\n\t\tvotesAverage,\n\t\tisFavorite,\n\t\tfirstAirDate\n\t} = tvShow;\n\n\treturn (\n\t\t<Link className=\"tvshow-card\" to={`/tvshow/${id}`}>\n\t\t\t<div className=\"tvshow-card__poster\">\n\t\t\t\t<MediaImage \n\t\t\t\t\tclassName=\"tvshow-card__poster-image\" \n\t\t\t\t\tpath={backdropImagePath} \n\t\t\t\t\ttype=\"backdrop\" \n\t\t\t\t\tsizes=\"38vw\"\n\t\t\t\t\talt={name}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"tvshow-card__footer\">\n\t\t\t\t<RatingIcon \n\t\t\t\t\tclassName=\"tvshow-cart__rating\" \n\t\t\t\t\tratingValue={votesAverage} \n\t\t\t\t\tsize={RatingIcon.sizes.BIG}\n\t\t\t\t/>\n\t\t\t\t<div className=\"tvshow-card__info\">\n\t\t\t\t\t<span className=\"tvshow-card__title\">{name}</span>\n\t\t\t\t\t<span className=\"tvshow-card__date\">{(new Date(firstAirDate).toDateString())}</span>\n\t\t\t\t</div>\n\t\t\t\t<FavoriteIcon className=\"tvshow-card__favorite-icon\" isActive={isFavorite} />\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useQueryString from '../shared/use-query-string/use-query-string';\nimport useDataFetching from '../shared/use-data-fetching/use-data-fetching';\n\nimport Loader from '../shared/loader/loader';\nimport TvShowCard from './tvshow-card/tvshow-card';\n\nimport './home-view.css';\n\nconst FILTER_CODE_POPULAR = 'popular';\n\nfunction FilterLink({ filterCode, selectedFilter }) {\n\tconst filterName = (filterCode === FILTER_CODE_POPULAR) ? 'Popular' : 'Top Rated';\n\tconst isSelected = (filterCode === selectedFilter);\n\treturn (\n\t\t<Link \n\t\t\tclassName={`home-view__selector-link ${isSelected ? 'home-view__selector-link--selected' : ''}`} \n\t\t\tto={`/?filter=${filterCode}`}\n\t\t>{filterName}</Link>\n\t)\n}\n\nconst VIEW_DATA_QUERY = `\n\tquery TvShowsByType($type: String!) {\n\t\tgetByType(type: $type) {\n\t\t\tid\n\t\t\tname\n\t\t\tbackdropImagePath\n\t\t\tposterPath\n\t\t\tvotesAverage\n\t\t\tisFavorite\n\t\t\tfirstAirDate\n\t\t}\n\t}\n`;\n\nexport default function HomeView() {\n\tconst qs = useQueryString();\n\tconst selectedFilter = qs.get('filter') || FILTER_CODE_POPULAR;\n\t\n\tconst {\n\t\tisFetching,\n\t\tdata\n\t} = useDataFetching({\n\t\tquery: VIEW_DATA_QUERY,\n\t\tparams: { \n\t\t\ttype: selectedFilter\n\t\t}\n\t});\n\n\tif (isFetching) return <Loader />;\n\tif (!data) return null;\n\n\tconst tvShows = data.getByType;\n\treturn (\n\t\t<section className=\"home-view\">\n\t\t\t<div className=\"home-view__type-selector\">\n\t\t\t\t<FilterLink filterCode=\"popular\" selectedFilter={selectedFilter} />\n\t\t\t\t<FilterLink filterCode=\"top_rated\" selectedFilter={selectedFilter} />\n\t\t\t</div>\n\t\t\t<div className=\"home-view__grid\">\n\t\t\t\t{tvShows.map(tvShow => <TvShowCard key={tvShow.id} tvShow={tvShow} />)}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import { useLocation } from 'react-router-dom';\n\nexport default function useQueryString() {\n\treturn new URLSearchParams(useLocation().search);\n}\n"],"sourceRoot":""}