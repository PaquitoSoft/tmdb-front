{"version":3,"sources":["components/shared/use-api-client/use-api-client.js","components/shared/rating-icon/rating-icon.js","components/home/tvshow-card/tvshow-card.js","components/home/home-view.js","components/shared/use-query-string.js"],"names":["useApiClient","query","params","apiClient","useAppContext","useState","isFetching","setIsFetching","data","setData","error","setError","paramsHash","btoa","JSON","stringify","useEffect","ignore","variables","then","result","errors","catch","RatingIcon","ratingValue","size","className","toFixed","sizes","SMALL","BIG","TvShowCard","tvShow","id","name","backdropImagePath","votesAverage","firstAirDate","to","src","alt","Date","toDateString","FILTER_CODE_POPULAR","FilterLink","filterCode","selectedFilter","filterName","isSelected","VIEW_DATA_QUERY","HomeView","URLSearchParams","useLocation","search","get","type","tvShows","getByType","map","key"],"mappings":"2KAGe,SAASA,EAAT,GAEX,IADHC,EACE,EADFA,MACE,IADKC,cACL,MADc,GACd,EACMC,EAAcC,cAAdD,UADN,EAEkCE,oBAAS,GAF3C,mBAEKC,EAFL,KAEiBC,EAFjB,OAGsBF,qBAHtB,mBAGKG,EAHL,KAGWC,EAHX,OAIwBJ,qBAJxB,mBAIKK,EAJL,KAIYC,EAJZ,KAKIC,EAAaC,KAAKC,KAAKC,UAAUb,IA0BvC,OAxBAc,qBAAU,WACT,IAAIC,GAAS,EAmBb,OAlBAV,GAAc,GACdJ,EAAUF,MAAM,CAAEA,QAAOiB,UAAWhB,IACnCiB,MAAK,SAAAC,GACL,GAAIH,EAAQ,OAAO,KAEfG,EAAOC,OACVV,EAASS,EAAOC,QAEhBZ,EAAQW,EAAOZ,MAGhBD,GAAc,MAEde,OAAM,SAAAZ,GACNC,EAASD,GACTH,GAAc,MAGR,kBAAMU,GAAS,KAEpB,CAACL,IAEG,CACNN,aACAE,OACAE,W,gCCvCF,0BAIA,SAASa,EAAT,GAAsE,IAAhDC,EAA+C,EAA/CA,YAA+C,IAAlCC,YAAkC,MAA3B,QAA2B,MAAlBC,iBAAkB,MAAN,GAAM,EACpE,OACC,0BACCA,UAAS,mCAA8BD,EAA9B,YAAsCC,IAC9CF,EAAYG,QAAQ,IAIxBJ,EAAWK,MAAQ,CAClBC,MAAO,QACPC,IAAK,OAGSP,O,kKCVA,SAASQ,EAAT,GAAsC,IAAD,IAAfC,cAAe,MAAN,GAAM,EAElDC,EAKGD,EALHC,GACAC,EAIGF,EAJHE,KACAC,EAGGH,EAHHG,kBACAC,EAEGJ,EAFHI,aACAC,EACGL,EADHK,aAGD,OACC,kBAAC,IAAD,CAAMX,UAAU,cAAcY,GAAE,kBAAaL,IAC5C,yBAAKP,UAAU,uBACd,yBAAKa,IAAG,uDAAkDJ,GAAqBK,IAAKN,KAErF,yBAAKR,UAAU,uBACd,kBAAC,IAAD,CACCA,UAAU,sBACVF,YAAaY,EACbX,KAAMF,IAAWK,MAAME,MAExB,yBAAKJ,UAAU,qBACd,0BAAMA,UAAU,sBAAsBQ,GACtC,0BAAMR,UAAU,qBAAsB,IAAIe,KAAKJ,GAAcK,mB,MC7BlE,wCAUA,IAAMC,EAAsB,UAE5B,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAC3BC,EAAcF,IAAeF,EAAuB,UAAY,YAChEK,EAAcH,IAAeC,EACnC,OACC,kBAAC,IAAD,CACCpB,UAAS,mCAA8BsB,EAAa,qCAAuC,IAC3FV,GAAE,mBAAcO,IACfE,GAIJ,IAAME,EAAe,6KAaN,SAASC,IACvB,IACMJ,ECnCC,IAAIK,gBAAgBC,cAAcC,QDmCfC,IAAI,WAAaX,EAFT,EAQ9B3C,YAAa,CAChBC,MAAOgD,EACP/C,OAAQ,CACPqD,KAAMT,KANPxC,EALiC,EAKjCA,WACAE,EANiC,EAMjCA,KACAE,EAPiC,EAOjCA,MAQD,GAAIJ,GAAcI,EAAO,OAAO,KAEhC,IAAM8C,EAAUhD,EAAKiD,UACrB,OACC,6BAAS/B,UAAU,aAClB,yBAAKA,UAAU,4BACd,kBAACkB,EAAD,CAAYC,WAAW,UAAUC,eAAgBA,IACjD,kBAACF,EAAD,CAAYC,WAAW,YAAYC,eAAgBA,KAEpD,yBAAKpB,UAAU,mBACb8B,EAAQE,KAAI,SAAA1B,GAAM,OAAI,kBAACD,EAAD,CAAY4B,IAAK3B,EAAOC,GAAID,OAAQA","file":"static/js/3.6ea2aaf2.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAppContext } from '../../app-context/app-context';\n\nexport default function useApiClient({\n\tquery, params = {}\n}) {\n\tconst { apiClient } = useAppContext();\n\tconst [isFetching, setIsFetching] = useState(true);\n\tconst [data, setData] = useState();\n\tconst [error, setError] = useState();\n\tconst paramsHash = btoa(JSON.stringify(params));\n\n\tuseEffect(() => {\n\t\tlet ignore = false;\n\t\tsetIsFetching(true);\n\t\tapiClient.query({ query, variables: params })\n\t\t.then(result => {\n\t\t\tif (ignore) return null;\n\n\t\t\tif (result.errors) {\n\t\t\t\tsetError(result.errors);\n\t\t\t} else {\n\t\t\t\tsetData(result.data);\n\t\t\t}\n\t\t\t\n\t\t\tsetIsFetching(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetError(error);\n\t\t\tsetIsFetching(false);\n\t\t});\n\n\t\treturn () => ignore = true;\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [paramsHash]);\n\n\treturn {\n\t\tisFetching,\n\t\tdata,\n\t\terror\n\t};\n}\n","import React from 'react';\n\nimport './rating-icon.css';\n\nfunction RatingIcon({ ratingValue, size = 'small', className = '' }) {\n\treturn (\n\t\t<span \n\t\t\tclassName={`rating-icon rating-icon--${size} ${className}`}\n\t\t>{ratingValue.toFixed(1)}</span>\n\t);\n}\n\nRatingIcon.sizes = {\n\tSMALL: 'small',\n\tBIG: 'big'\n};\n\nexport default RatingIcon;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RatingIcon from '../../shared/rating-icon/rating-icon';\n\nimport './tvshow-card.css';\n\nexport default function TvShowCard({ tvShow = {} }) {\n\tconst {\n\t\tid,\n\t\tname,\n\t\tbackdropImagePath,\n\t\tvotesAverage,\n\t\tfirstAirDate\n\t} = tvShow;\n\n\treturn (\n\t\t<Link className=\"tvshow-card\" to={`/tvshow/${id}`}>\n\t\t\t<div className=\"tvshow-card__poster\">\n\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500_and_h282_face${backdropImagePath}`} alt={name}/>\n\t\t\t</div>\n\t\t\t<div className=\"tvshow-card__footer\">\n\t\t\t\t<RatingIcon \n\t\t\t\t\tclassName=\"tvshow-cart__rating\" \n\t\t\t\t\tratingValue={votesAverage} \n\t\t\t\t\tsize={RatingIcon.sizes.BIG}\n\t\t\t\t/>\n\t\t\t\t<div className=\"tvshow-card__info\">\n\t\t\t\t\t<span className=\"tvshow-card__title\">{name}</span>\n\t\t\t\t\t<span className=\"tvshow-card__date\">{(new Date(firstAirDate).toDateString())}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQueryString } from '../shared/use-query-string';\nimport useApiClient from '../shared/use-api-client/use-api-client';\n\nimport TvShowCard from './tvshow-card/tvshow-card';\n\nimport './home-view.css';\n\nconst FILTER_CODE_POPULAR = 'popular';\n\nfunction FilterLink({ filterCode, selectedFilter }) {\n\tconst filterName = (filterCode === FILTER_CODE_POPULAR) ? 'Popular' : 'Top Rated';\n\tconst isSelected = (filterCode === selectedFilter);\n\treturn (\n\t\t<Link \n\t\t\tclassName={`home-view__selector-link ${isSelected ? 'home-view__selector-link--selected' : ''}`} \n\t\t\tto={`/?filter=${filterCode}`}\n\t\t>{filterName}</Link>\n\t)\n}\n\nconst VIEW_DATA_QUERY = `\nquery TvShowsByType($type: String!) {\n\tgetByType(type: $type) {\n\t\tid\n\t\tname\n\t\tbackdropImagePath\n\t\tposterPath\n\t\tvotesAverage\n\t\tfirstAirDate\n\t}\n}\n`;\n\nexport default function HomeView() {\n\tconst qs = useQueryString();\n\tconst selectedFilter = qs.get('filter') || FILTER_CODE_POPULAR;\n\t\n\tconst {\n\t\tisFetching,\n\t\tdata,\n\t\terror\n\t} = useApiClient({\n\t\tquery: VIEW_DATA_QUERY,\n\t\tparams: { \n\t\t\ttype: selectedFilter\n\t\t}\n\t});\n\n\tif (isFetching || error) return null;\n\n\tconst tvShows = data.getByType;\n\treturn (\n\t\t<section className=\"home-view\">\n\t\t\t<div className=\"home-view__type-selector\">\n\t\t\t\t<FilterLink filterCode=\"popular\" selectedFilter={selectedFilter} />\n\t\t\t\t<FilterLink filterCode=\"top_rated\" selectedFilter={selectedFilter} />\n\t\t\t</div>\n\t\t\t<div className=\"home-view__grid\">\n\t\t\t\t{tvShows.map(tvShow => <TvShowCard key={tvShow.id} tvShow={tvShow} />)}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import { useLocation } from 'react-router-dom';\n\nexport function useQueryString() {\n\treturn new URLSearchParams(useLocation().search);\n}\n"],"sourceRoot":""}