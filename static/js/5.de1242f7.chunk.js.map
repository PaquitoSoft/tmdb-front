{"version":3,"sources":["components/shared/rating-icon/rating-icon.js","components/season-detail/episode-card/episode-card.js","components/season-detail/season-detail-view.js"],"names":["RatingIcon","ratingValue","size","className","toFixed","sizes","SMALL","BIG","NOW","Date","now","EpisodeCard","episode","name","episodeNumber","imagePath","airDate","voteAverage","overview","isOverviewAvailable","trim","length","isYetToBeAired","getTime","useState","isOverviewVisible","toggleOverviewVisibility","path","type","ratio","alt","toDateString","onClick","SeasonDetailView","data","getSeasonDetails","episodes","tvShow","getTvShowDetails","to","id","map","key","buildDataFetchRequestData","urlParams","tvShowId","seasonNumber","query","params","parseInt"],"mappings":"+GAAA,0BAIA,SAASA,EAAT,GAAsE,IAAhDC,EAA+C,EAA/CA,YAA+C,IAAlCC,YAAkC,MAA3B,QAA2B,MAAlBC,iBAAkB,MAAN,GAAM,EACpE,OACC,0BACCA,UAAS,mCAA8BD,EAA9B,YAAsCC,IAC9CF,EAAYG,QAAQ,IAIxBJ,EAAWK,MAAQ,CAClBC,MAAO,QACPC,IAAK,OAGSP,O,gKCXTQ,EAAMC,KAAKC,MAEF,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAEpCC,EAMGD,EANHC,KACAC,EAKGF,EALHE,cACAC,EAIGH,EAJHG,UACAC,EAGGJ,EAHHI,QACAC,EAEGL,EAFHK,YACAC,EACGN,EADHM,SAEKC,EAAsBD,EAASE,OAAOC,OAAS,EAC/CC,EAAkB,IAAIb,KAAKO,GAAUO,UAAYf,EAVP,EAWMgB,oBAAS,GAXf,mBAWzCC,EAXyC,KAWtBC,EAXsB,KAahD,OACC,yBAAKvB,UAAU,gBACd,kBAAC,IAAD,CACCwB,KAAMZ,EACNa,KAAK,QACLvB,MAAM,OACNwB,MAAO,KACP1B,UAAU,sBACV2B,IAAKjB,IAEN,yBAAKV,UAAU,sBACd,yBAAKA,UAAU,qBACd,yBAAKA,UAAU,uBACd,0BAAMA,UAAU,wBAAwBW,EAAxC,SACA,0BAAMX,UAAS,6BAAwBmB,EAAiB,mCAAqC,KAC3FA,EAAiB,qBAAuBT,IAG1CI,EAAc,GACd,kBAAC,IAAD,CAAYd,UAAU,uBAAuBF,YAAagB,KAG5D,yBAAKd,UAAU,qBACd,0BAAMA,UAAU,sBAAhB,IAAwC,IAAIM,KAAKO,GAASe,eAA1D,KACCZ,GACA,0BACChB,UAAU,8BACV6B,QAAS,kBAAMN,GAAyB,KAFzC,kBAOFD,GACA,yBACCtB,UAAU,+BACV6B,QAAS,kBAAMN,GAAyB,KAExC,yBAAKvB,UAAU,kCACd,wBAAIA,UAAU,gCAAgCU,GAC7CK,K,MC5DP,wCA8Be,SAASe,EAAT,GAAqC,IAATC,EAAQ,EAARA,KAAQ,EAK9CA,EAAKC,iBAHRtB,EAFiD,EAEjDA,KACAG,EAHiD,EAGjDA,QAHiD,IAIjDoB,gBAJiD,MAItC,GAJsC,EAM5CC,EAASH,EAAKI,iBAEpB,OACC,6BAASnC,UAAU,iBAClB,4BAAQA,UAAU,yBACjB,6BACC,wBAAIA,UAAU,8BAA8BU,GAC5C,0BAAMV,UAAU,8BAAhB,IAAgD,IAAIM,KAAKO,GAASe,eAAlE,MAED,kBAAC,IAAD,CACC5B,UAAU,6BACVoC,GAAE,kBAAaF,EAAOG,KACtB,2BAAIH,EAAOxB,QAEb,6BAASV,UAAU,2BACjBiC,EAASK,KAAI,SAAA7B,GAAO,OACpB,kBAACD,EAAD,CAAa+B,IAAK9B,EAAQE,cAAeF,QAASA,SAOvDqB,EAAiBU,0BAA4B,oBAC5CC,UAAaC,EAD+B,EAC/BA,SAAUC,EADqB,EACrBA,aADqB,MAEtC,CACNC,MAvDkB,gaAwDlBC,OAAQ,CACPH,SAAUI,SAASJ,EAAU,GAC7BC,aAAcG,SAASH,EAAc","file":"static/js/5.de1242f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './rating-icon.css';\r\n\r\nfunction RatingIcon({ ratingValue, size = 'small', className = '' }) {\r\n\treturn (\r\n\t\t<span \r\n\t\t\tclassName={`rating-icon rating-icon--${size} ${className}`}\r\n\t\t>{ratingValue.toFixed(1)}</span>\r\n\t);\r\n}\r\n\r\nRatingIcon.sizes = {\r\n\tSMALL: 'small',\r\n\tBIG: 'big'\r\n};\r\n\r\nexport default RatingIcon;\r\n","import React, { useState } from 'react';\r\n\r\nimport './episode-card.css';\r\nimport RatingIcon from '../../shared/rating-icon/rating-icon';\r\nimport MediaImage from '../../shared/media-image/media-image';\r\n\r\nconst NOW = Date.now();\r\n\r\nexport default function EpisodeCard({ episode }) {\r\n\tconst {\r\n\t\tname,\r\n\t\tepisodeNumber,\r\n\t\timagePath,\r\n\t\tairDate,\r\n\t\tvoteAverage,\r\n\t\toverview\r\n\t} = episode;\r\n\tconst isOverviewAvailable = overview.trim().length > 0;\r\n\tconst isYetToBeAired = (new Date(airDate)).getTime() > NOW;\r\n\tconst [isOverviewVisible, toggleOverviewVisibility] = useState(false);\r\n\t\r\n\treturn (\r\n\t\t<div className=\"episode-card\">\r\n\t\t\t<MediaImage \r\n\t\t\t\tpath={imagePath}\r\n\t\t\t\ttype=\"still\"\r\n\t\t\t\tsizes=\"30vw\"\r\n\t\t\t\tratio={1.77}\r\n\t\t\t\tclassName=\"episode-card__media\"\r\n\t\t\t\talt={name}\r\n\t\t\t/>\r\n\t\t\t<div className=\"episode-card__info\">\r\n\t\t\t\t<div className=\"episode-card__row\">\r\n\t\t\t\t\t<div className=\"episode-card__title\">\r\n\t\t\t\t\t\t<span className=\"episode-card__number\">{episodeNumber}.&nbsp;</span>\r\n\t\t\t\t\t\t<span className={`episode-card__name ${isYetToBeAired ? 'episode-card__name--not-released' : ''}`}>\r\n\t\t\t\t\t\t\t{isYetToBeAired ? 'Yet to be released' : name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{voteAverage > 0 && \r\n\t\t\t\t\t\t<RatingIcon className=\"episode-card__rating\" ratingValue={voteAverage} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"episode-card__row\">\r\n\t\t\t\t\t<span className=\"episode-card__date\">({(new Date(airDate).toDateString())})</span>\r\n\t\t\t\t\t{isOverviewAvailable &&\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\tclassName=\"episode-card__overview-link\"\r\n\t\t\t\t\t\t\tonClick={() => toggleOverviewVisibility(true)}\r\n\t\t\t\t\t\t>See overview</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isOverviewVisible && \r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"episode-card__overview-panel\"\r\n\t\t\t\t\tonClick={() => toggleOverviewVisibility(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"episode-card__overview-content\">\r\n\t\t\t\t\t\t<h4 className=\"episode-card__overview-title\">{name}</h4>\r\n\t\t\t\t\t\t{overview}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport EpisodeCard from './episode-card/episode-card';\r\n\r\nimport './season-detail-view.css';\r\n\r\nconst viewDataQuery = `\r\n\tquery SeasonDetails($tvShowId: Int!, $seasonNumber: Int!) {\r\n\t\tgetSeasonDetails(tvShowId: $tvShowId, seasonNumber: $seasonNumber) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tairDate\r\n\t\t\tepisodes {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tepisodeNumber\r\n\t\t\t\timagePath\r\n\t\t\t\tairDate\r\n\t\t\t\tvoteAverage\r\n\t\t\t\toverview\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTvShowDetails(tvShowId: $tvShowId) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default function SeasonDetailView({ data }) {\r\n\tconst {\r\n\t\tname,\r\n\t\tairDate,\r\n\t\tepisodes = []\r\n\t} = data.getSeasonDetails;\r\n\tconst tvShow = data.getTvShowDetails;\r\n\r\n\treturn (\r\n\t\t<section className=\"season-detail\">\r\n\t\t\t<header className=\"season-detail__header\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 className=\"season-detail__season-name\">{name}</h1>\r\n\t\t\t\t\t<span className=\"season-detail__season-date\">({(new Date(airDate).toDateString())})</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link \r\n\t\t\t\t\tclassName=\"season-detail__tvshow-name\"\r\n\t\t\t\t\tto={`/tvshow/${tvShow.id}`}\r\n\t\t\t\t><i>{tvShow.name}</i></Link>\r\n\t\t\t</header>\r\n\t\t\t<section className=\"season-detail__episodes\">\r\n\t\t\t\t{episodes.map(episode => \r\n\t\t\t\t\t<EpisodeCard key={episode.episodeNumber} episode={episode} />\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nSeasonDetailView.buildDataFetchRequestData = ({ \r\n\turlParams: { tvShowId, seasonNumber} \r\n}) => ({\r\n\tquery: viewDataQuery,\r\n\tparams: { \r\n\t\ttvShowId: parseInt(tvShowId, 0), \r\n\t\tseasonNumber: parseInt(seasonNumber, 0)\r\n\t}\r\n});\r\n"],"sourceRoot":""}