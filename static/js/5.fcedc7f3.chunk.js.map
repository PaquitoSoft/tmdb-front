{"version":3,"sources":["components/shared/use-api-client/use-api-client.js","components/shared/rating-icon/rating-icon.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/tvshow-detail/tvshow-detail-view.js"],"names":["useApiClient","query","params","apiClient","useAppContext","useState","isFetching","setIsFetching","data","setData","error","setError","paramsHash","btoa","JSON","stringify","useEffect","ignore","variables","then","result","errors","catch","RatingIcon","ratingValue","size","className","toFixed","sizes","SMALL","BIG","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","CharacterMiniCard","character","imagePath","name","actorName","mediaUrl","title","subtitle","SeasonMiniCard","season","tvShowId","posterPath","seasonNumber","airDate","episodesCount","to","VIEW_DATA_QUERY","SET_FAVORITE_TVSHOW_MUTATION","UNSET_FAVORITE_TVSHOW_MUTATION","TvShowDetailView","useParams","tvShow","setTvShow","parseInt","saveFavorite","isFavorite","id","console","_tvShow","getTvShowDetails","firstAirDate","overview","votesAverage","seasons","cast","src","alt","Date","toDateString","onClick","map"],"mappings":"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","file":"static/js/5.fcedc7f3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAppContext } from '../../app-context/app-context';\n\nexport default function useApiClient({\n\tquery, params = {}\n}) {\n\tconst { apiClient } = useAppContext();\n\tconst [isFetching, setIsFetching] = useState(true);\n\tconst [data, setData] = useState();\n\tconst [error, setError] = useState();\n\tconst paramsHash = btoa(JSON.stringify(params));\n\n\tuseEffect(() => {\n\t\tlet ignore = false;\n\t\tsetIsFetching(true);\n\t\tapiClient.query({ query, variables: params })\n\t\t.then(result => {\n\t\t\tif (ignore) return null;\n\n\t\t\tif (result.errors) {\n\t\t\t\tsetError(result.errors);\n\t\t\t} else {\n\t\t\t\tsetData(result.data);\n\t\t\t}\n\t\t\t\n\t\t\tsetIsFetching(false);\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetError(error);\n\t\t\tsetIsFetching(false);\n\t\t});\n\n\t\treturn () => ignore = true;\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [paramsHash]);\n\n\treturn {\n\t\tisFetching,\n\t\tdata,\n\t\terror\n\t};\n}\n","import React from 'react';\n\nimport './rating-icon.css';\n\nfunction RatingIcon({ ratingValue, size = 'small', className = '' }) {\n\treturn (\n\t\t<span \n\t\t\tclassName={`rating-icon rating-icon--${size} ${className}`}\n\t\t>{ratingValue.toFixed(1)}</span>\n\t);\n}\n\nRatingIcon.sizes = {\n\tSMALL: 'small',\n\tBIG: 'big'\n};\n\nexport default RatingIcon;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { useAppContext } from '../app-context/app-context';\nimport useApiClient from '../shared/use-api-client/use-api-client';\n\nimport MiniCard from '../shared/mini-card/mini-card';\nimport RatingIcon from '../shared/rating-icon/rating-icon';\n\nimport './tvshow-detail-view.css';\n\nfunction CharacterMiniCard({ character }) {\n\tconst {\n\t\timagePath,\n\t\tname,\n\t\tactorName\n\t} = character;\n\n\treturn (\n\t\t<MiniCard\n\t\t\tmediaUrl={`https://image.tmdb.org/t/p/w138_and_h175_face/${imagePath}`}\n\t\t\ttitle={actorName}\n\t\t\tsubtitle={name}\n\t\t/>\n\t);\n}\n\nfunction SeasonMiniCard({ season, tvShowId }) {\n\tconst {\n\t\tposterPath,\n\t\tseasonNumber,\n\t\tairDate,\n\t\tepisodesCount\n\t} = season;\n\n\treturn (\n\t\t<Link to={`/tvshow/${tvShowId}/season/${seasonNumber}`}>\n\t\t\t<MiniCard \n\t\t\t\tmediaUrl={`https://image.tmdb.org/t/p/w130_and_h195_bestv2${posterPath}`}\n\t\t\t\ttitle={`Season ${seasonNumber}`}\n\t\t\t\tsubtitle={<span>({airDate})<br/>{episodesCount} Episodes</span>}\n\t\t\t/>\n\t\t</Link>\n\t);\n}\n\nconst VIEW_DATA_QUERY = `\n\tquery TvShowDetails($tvShowId: Int!) {\n\t\tgetTvShowDetails(tvShowId: $tvShowId) {\n\t\t\tid\n\t\t\tname\n\t\t\tposterPath\n\t\t\tfirstAirDate\n\t\t\toverview\n\t\t\tvotesAverage\n\t\t\tisFavorite\n\t\t\tseasons {\n\t\t\t\tseasonNumber\n\t\t\t\tposterPath\n\t\t\t\tairDate\n\t\t\t\tepisodesCount\n\t\t\t}\n\t\t\tcast {\n\t\t\t\tid\n\t\t\t\timagePath\n\t\t\t\tname\n\t\t\t\tactorName\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst SET_FAVORITE_TVSHOW_MUTATION = `\n\tmutation SaveFavoriteTvShow($tvShowId: Int!) {\n\t\tsaveFavoriteTvShow(tvShowId: $tvShowId)\n\t}\n`;\n\nconst UNSET_FAVORITE_TVSHOW_MUTATION = `\n\tmutation RemoveFavoriteTvShow($tvShowId: Int!) {\n\t\tremoveFavoriteTvShow(tvShowId: $tvShowId)\n\t}\n`;\n\n\nexport default function TvShowDetailView() {\n\tconst { tvShowId } = useParams();\n\tconst { apiClient } = useAppContext();\n\tconst [tvShow, setTvShow] = useState();\n\tconst {\n\t\tisFetching,\n\t\tdata,\n\t\terror\n\t} = useApiClient({\n\t\tquery: VIEW_DATA_QUERY,\n\t\tparams: { \n\t\t\ttvShowId: parseInt(tvShowId, 0)\n\t\t}\n\t});\n\n\tconst saveFavorite = ({ tvShow, isFavorite }) => {\n\t\tapiClient.query({ \n\t\t\tquery: isFavorite ? UNSET_FAVORITE_TVSHOW_MUTATION : SET_FAVORITE_TVSHOW_MUTATION, \n\t\t\tvariables: { tvShowId: tvShow.id} \n\t\t})\n\t\t.then(() => {\n\t\t\tsetTvShow({\n\t\t\t\t...tvShow,\n\t\t\t\tisFavorite: !isFavorite\n\t\t\t})\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(`Error setting favorite value for TvShow ${tvShowId}`);\n\t\t});\n\t}\n\t\n\tif (isFetching || error) return null;\n\t\n\tconst _tvShow = tvShow || data.getTvShowDetails;\n\tconst {\n\t\tid,\n\t\tname,\n\t\tposterPath,\n\t\tfirstAirDate,\n\t\toverview,\n\t\tvotesAverage,\n\t\tisFavorite,\n\t\tseasons = [],\n\t\tcast = []\n\t} = _tvShow;\n\n\treturn (\n\t\t<section className=\"tvshow-detail\">\n\t\t\t<div className=\"tvshow-detail__main-info\">\n\t\t\t\t<section className=\"tvshow-detail__poster\">\n\t\t\t\t\t<img \n\t\t\t\t\t\tclassName=\"tvshow-detail__poster\" \n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${posterPath}`} \n\t\t\t\t\t\talt={name}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"tvshow-detail__info-container\">\n\t\t\t\t\t<div className=\"tvshow-detail__title\">\n\t\t\t\t\t\t<h1 className=\"tvshow-detail__name\">{name}</h1>\n\t\t\t\t\t\t<span className=\"tvshow-detail__year\">({(new Date(firstAirDate).toDateString())})</span>\n\t\t\t\t\t\t<RatingIcon \n\t\t\t\t\t\t\tclassName=\"tvshow-detail__rating\"\n\t\t\t\t\t\t\tratingValue={votesAverage}\n\t\t\t\t\t\t\tsize={RatingIcon.sizes.BIG}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"tvshow-detail__overview-title\">\n\t\t\t\t\t\t<h2 className=\"tvshow-detail__overview-label\">Overview</h2>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\t\tclassName=\"tvshow-detail__favorite-icon\" \n\t\t\t\t\t\t\tsrc={`/favorite${isFavorite ? '' : '_border'}-24px.svg`}\n\t\t\t\t\t\t\talt=\"Is not a favorite tv show\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsaveFavorite({ isFavorite, tvShow: _tvShow });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"tvshow-detail__overview-description\">{overview}</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\n\t\t\t<hr className=\"tvshow-detail__separator\"/>\n\n\t\t\t<section className=\"tvshow-detail__cast\">\n\t\t\t\t<h2 className=\"tvshow-detail__cast-title\">Tv Show Cast</h2>\n\t\t\t\t<div className=\"tvshow-detail__characters\">\n\t\t\t\t\t{cast.map(character => (\n\t\t\t\t\t\t<CharacterMiniCard key={character.id} character={character} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<hr className=\"tvshow-detail__separator\"/>\n\n\t\t\t<section className=\"tvshow-detail__seasons-container\">\n\t\t\t\t<h2 className=\"tvshow-detail__seasons-title\">Seasons</h2>\n\t\t\t\t<div className=\"tvshow-detail__seasons-list\">\n\t\t\t\t\t{seasons.map(season => (\n\t\t\t\t\t\t<SeasonMiniCard key={season.seasonNumber} season={season} tvShowId={id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</section>\n\t)\n}\n"],"sourceRoot":""}