{"version":3,"sources":["components/shared/rating-icon/rating-icon.js","components/season-detail/episode-card/episode-card.js","components/season-detail/season-detail-view.js"],"names":["RatingIcon","ratingValue","size","className","toFixed","sizes","SMALL","BIG","NOW","Date","now","EpisodeCard","episode","name","episodeNumber","imagePath","airDate","voteAverage","overview","isOverviewAvailable","trim","length","isYetToBeAired","getTime","useState","isOverviewVisible","toggleOverviewVisibility","path","type","ratio","alt","toDateString","onClick","onKeyDown","role","tabIndex","SeasonDetailView","data","getSeasonDetails","episodes","tvShow","getTvShowDetails","to","id","map","key","buildDataFetchRequestData","urlParams","tvShowId","seasonNumber","query","params","parseInt"],"mappings":"+GAAA,0BAKA,SAASA,EAAT,GAAsE,IAAhDC,EAA+C,EAA/CA,YAA+C,IAAlCC,YAAkC,MAA3B,QAA2B,MAAlBC,iBAAkB,MAAN,GAAM,EACpE,OACC,0BACCA,UAAS,mCAA8BD,EAA9B,YAAsCC,IAC9CF,EAAYG,QAAQ,IAIxBJ,EAAWK,MAAQ,CAClBC,MAAO,QACPC,IAAK,OASSP,O,wJChBTQ,G,MAAMC,KAAKC,OA+EFC,MA7Ef,YAAmC,IAAZC,EAAW,EAAXA,QAErBC,EAMGD,EANHC,KACAC,EAKGF,EALHE,cACAC,EAIGH,EAJHG,UACAC,EAGGJ,EAHHI,QACAC,EAEGL,EAFHK,YACAC,EACGN,EADHM,SAEKC,EAAsBD,EAASE,OAAOC,OAAS,EAC/CC,EAAkB,IAAIb,KAAKO,GAAUO,UAAYf,EAVtB,EAWqBgB,oBAAS,GAX9B,mBAW1BC,EAX0B,KAWPC,EAXO,KAajC,OACC,yBAAKvB,UAAU,gBACd,kBAAC,IAAD,CACCwB,KAAMZ,EACNa,KAAK,QACLvB,MAAM,OACNwB,MAAO,KACP1B,UAAU,sBACV2B,IAAKjB,IAEN,yBAAKV,UAAU,sBACd,yBAAKA,UAAU,qBACd,yBAAKA,UAAU,uBACd,0BAAMA,UAAU,wBAAwBW,EAAxC,SACA,0BAAMX,UAAS,6BAAwBmB,EAAiB,mCAAqC,KAC3FA,EAAiB,qBAAuBT,IAG1CI,EAAc,GACd,kBAAC,IAAD,CAAYd,UAAU,uBAAuBF,YAAagB,KAG5D,yBAAKd,UAAU,qBACd,0BAAMA,UAAU,sBAAhB,IAAwC,IAAIM,KAAKO,GAASe,eAA1D,KACCZ,GACA,0BACChB,UAAU,8BACV6B,QAAS,kBAAMN,GAAyB,IACxCO,UAAW,kBAAMP,GAAyB,IAC1CQ,KAAK,SACLC,SAAS,KALV,kBAUFV,GACA,yBACCtB,UAAU,+BACV6B,QAAS,kBAAMN,GAAyB,IACxCO,UAAW,kBAAMP,GAAyB,IAC1CQ,KAAK,SACLC,SAAS,KAET,yBAAKhC,UAAU,kCACd,wBAAIA,UAAU,gCAAgCU,GAC7CK,M,MCrCP,SAASkB,EAAT,GAAqC,IAATC,EAAQ,EAARA,KAAQ,EAK/BA,EAAKC,iBAHRzB,EAFkC,EAElCA,KACAG,EAHkC,EAGlCA,QAHkC,IAIlCuB,gBAJkC,MAIvB,GAJuB,EAM7BC,EAASH,EAAKI,iBAEpB,OACC,6BAAStC,UAAU,iBAClB,4BAAQA,UAAU,yBACjB,6BACC,wBAAIA,UAAU,8BAA8BU,GAC5C,0BAAMV,UAAU,8BAAhB,IAAgD,IAAIM,KAAKO,GAASe,eAAlE,MAED,kBAAC,IAAD,CACC5B,UAAU,6BACVuC,GAAE,kBAAaF,EAAOG,KACtB,2BAAIH,EAAO3B,QAEb,6BAASV,UAAU,2BACjBoC,EAASK,KAAI,SAAAhC,GAAO,OACpB,kBAAC,EAAD,CAAaiC,IAAKjC,EAAQE,cAAeF,QAASA,SAqBvDwB,EAAiBU,0BAA4B,oBAC5CC,UAAaC,EAD+B,EAC/BA,SAAUC,EADqB,EACrBA,aADqB,MAEtC,CACNC,MArEkB,gaAsElBC,OAAQ,CACPH,SAAUI,SAASJ,EAAU,GAC7BC,aAAcG,SAASH,EAAc,MAIxBb","file":"static/js/5.04df78a2.chunk.js","sourcesContent":["import React from 'react';\nimport { number, string } from 'prop-types';\n\nimport './rating-icon.css';\n\nfunction RatingIcon({ ratingValue, size = 'small', className = '' }) {\n\treturn (\n\t\t<span \n\t\t\tclassName={`rating-icon rating-icon--${size} ${className}`}\n\t\t>{ratingValue.toFixed(1)}</span>\n\t);\n}\n\nRatingIcon.sizes = {\n\tSMALL: 'small',\n\tBIG: 'big'\n};\n\nRatingIcon.propTypes = {\n\tratingValue: number.isRequired,\n\tsize: string,\n\tclassName: string\n};\n\nexport default RatingIcon;\n","import React, { useState } from 'react';\nimport { shape, string, number } from 'prop-types';\n\nimport RatingIcon from '../../shared/rating-icon/rating-icon';\nimport MediaImage from '../../shared/media-image/media-image';\n\nimport './episode-card.css';\n\nconst NOW = Date.now();\n\nfunction EpisodeCard({ episode }) {\n\tconst {\n\t\tname,\n\t\tepisodeNumber,\n\t\timagePath,\n\t\tairDate,\n\t\tvoteAverage,\n\t\toverview\n\t} = episode;\n\tconst isOverviewAvailable = overview.trim().length > 0;\n\tconst isYetToBeAired = (new Date(airDate)).getTime() > NOW;\n\tconst [isOverviewVisible, toggleOverviewVisibility] = useState(false);\n\t\n\treturn (\n\t\t<div className=\"episode-card\">\n\t\t\t<MediaImage \n\t\t\t\tpath={imagePath}\n\t\t\t\ttype=\"still\"\n\t\t\t\tsizes=\"30vw\"\n\t\t\t\tratio={1.77}\n\t\t\t\tclassName=\"episode-card__media\"\n\t\t\t\talt={name}\n\t\t\t/>\n\t\t\t<div className=\"episode-card__info\">\n\t\t\t\t<div className=\"episode-card__row\">\n\t\t\t\t\t<div className=\"episode-card__title\">\n\t\t\t\t\t\t<span className=\"episode-card__number\">{episodeNumber}.&nbsp;</span>\n\t\t\t\t\t\t<span className={`episode-card__name ${isYetToBeAired ? 'episode-card__name--not-released' : ''}`}>\n\t\t\t\t\t\t\t{isYetToBeAired ? 'Yet to be released' : name}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{voteAverage > 0 && \n\t\t\t\t\t\t<RatingIcon className=\"episode-card__rating\" ratingValue={voteAverage} />\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"episode-card__row\">\n\t\t\t\t\t<span className=\"episode-card__date\">({(new Date(airDate).toDateString())})</span>\n\t\t\t\t\t{isOverviewAvailable &&\n\t\t\t\t\t\t<span \n\t\t\t\t\t\t\tclassName=\"episode-card__overview-link\"\n\t\t\t\t\t\t\tonClick={() => toggleOverviewVisibility(true)}\n\t\t\t\t\t\t\tonKeyDown={() => toggleOverviewVisibility(true)}\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t>See overview</span>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isOverviewVisible && \n\t\t\t\t<div \n\t\t\t\t\tclassName=\"episode-card__overview-panel\"\n\t\t\t\t\tonClick={() => toggleOverviewVisibility(false)}\n\t\t\t\t\tonKeyDown={() => toggleOverviewVisibility(false)}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"episode-card__overview-content\">\n\t\t\t\t\t\t<h4 className=\"episode-card__overview-title\">{name}</h4>\n\t\t\t\t\t\t{overview}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nEpisodeCard.propTypes = {\n\tepisode: shape({\n\t\tname: string,\n\t\tepisodeNumber: number,\n\t\timagePath: string,\n\t\tairDate: string,\n\t\tvoteAverage: number,\n\t\toverview: string\n\t})\n};\n\nexport default EpisodeCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { shape, string, number, array } from 'prop-types';\n\nimport EpisodeCard from './episode-card/episode-card';\n\nimport './season-detail-view.css';\n\nconst viewDataQuery = `\n\tquery SeasonDetails($tvShowId: Int!, $seasonNumber: Int!) {\n\t\tgetSeasonDetails(tvShowId: $tvShowId, seasonNumber: $seasonNumber) {\n\t\t\tid\n\t\t\tname\n\t\t\tairDate\n\t\t\tepisodes {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tepisodeNumber\n\t\t\t\timagePath\n\t\t\t\tairDate\n\t\t\t\tvoteAverage\n\t\t\t\toverview\n\t\t\t}\n\t\t}\n\t\tgetTvShowDetails(tvShowId: $tvShowId) {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n`;\n\nfunction SeasonDetailView({ data }) {\n\tconst {\n\t\tname,\n\t\tairDate,\n\t\tepisodes = []\n\t} = data.getSeasonDetails;\n\tconst tvShow = data.getTvShowDetails;\n\n\treturn (\n\t\t<section className=\"season-detail\">\n\t\t\t<header className=\"season-detail__header\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className=\"season-detail__season-name\">{name}</h1>\n\t\t\t\t\t<span className=\"season-detail__season-date\">({(new Date(airDate).toDateString())})</span>\n\t\t\t\t</div>\n\t\t\t\t<Link \n\t\t\t\t\tclassName=\"season-detail__tvshow-name\"\n\t\t\t\t\tto={`/tvshow/${tvShow.id}`}\n\t\t\t\t><i>{tvShow.name}</i></Link>\n\t\t\t</header>\n\t\t\t<section className=\"season-detail__episodes\">\n\t\t\t\t{episodes.map(episode => \n\t\t\t\t\t<EpisodeCard key={episode.episodeNumber} episode={episode} />\n\t\t\t\t)}\n\t\t\t</section>\n\t\t</section>\n\t)\n}\n\nSeasonDetailView.propTypes = {\n\tdata: shape({\n\t\tgetSeasonDetails: shape({\n\t\t\tname: string,\n\t\t\tairDate: string,\n\t\t\tepisodes: array\n\t\t}),\n\t\tgetTvShowDetails: shape({\n\t\t\tid: number,\n\t\t\tname: string\n\t\t})\n\t})\n};\n\nSeasonDetailView.buildDataFetchRequestData = ({ \n\turlParams: { tvShowId, seasonNumber} \n}) => ({\n\tquery: viewDataQuery,\n\tparams: { \n\t\ttvShowId: parseInt(tvShowId, 0), \n\t\tseasonNumber: parseInt(seasonNumber, 0)\n\t}\n});\n\nexport default SeasonDetailView;\n"],"sourceRoot":""}